%YAML:1.0

#common parameters
imu_file:    "/Volumes/mac/Data/EuRoc/mav0/imu0/data.csv"
image_file:  "/Volumes/mac/Data/EuRoc/mav0/cam0/data.csv"
image_path:  "/Volumes/mac/Data/EuRoc/mav0/cam0/data"
image_file2: "/Volumes/mac/Data/EuRoc/mav0/cam1/data.csv"
image_path2: "/Volumes/mac/Data/EuRoc/mav0/cam1/data"
gps_file:    "/Volumes/mac/SlamResources/VINS_GPS_OSX/gps2.txt"
output_path: "/Volumes/mac/SlamResources/VINS_GPS_OSX/output"

#camera calibration 
model_type: PINHOLE
camera_name: camera
image_width: 752
image_height: 480
distortion_parameters:
   k1: -0.28340811
   k2: 0.07395907
   p1: 0.00019359
   p2: 0.00001762 
projection_parameters:
   fx: 458.654
   fy: 457.296
   cx: 367.215
   cy: 248.375

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning.                        
#If you choose 0 or 1, you should write down the following matrix.
#Rotation from camera frame to imu frame, imu^R_cam
extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [ 0.0148655429818, -0.999880929698, 0.00414029679422,
           0.999557249008, 0.0149672133247, 0.025715529948, 
          -0.0257744366974, 0.00375618835797, 0.999660727178]
#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [-0.02,-0.06, 0.01]

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking 最大特征数量
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
                        # 发布跟踪结果的频率（Hz）。 至少10Hz用于良好估计。 如果设置为0，则频率将与原始图像相同
F_threshold: 1.0        # ransac threshold (pixel)门槛
show_track: 1           # publish tracking image as topic
equalize: 1             # if image is too dark or light, trun on equalize 均衡 to find enough features
fisheye: 0              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

#optimization parameters  
max_solver_time: 1  # max solver itration time (ms), to guarantee real time 最大求解器迭代时间（ms），以保证实时
max_num_iterations: 100   # max solver itrations, to guarantee real time 最大求解器迭代数，以保证实时
keyframe_parallax: 10.0 # keyframe selection threshold (pixel) 关键帧选择阈值（像素）

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.08          # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 0.004         # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.00004         # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 2.0e-6       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.81007     # gravity magnitude

#loop closure parameters
loop_closure: 1                    # start loop closure
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
                                   # 加载并重复使用先前的姿势图; 从'pose_graph_save_path'加载
fast_relocalization: 0             # useful in real-time and large project
pose_graph_save_path: "/home/tony-ws1/output/pose_graph/" # save and load path

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu在线估计相机和imu之间的时间偏差
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#rolling shutter parameters
rolling_shutter: 0                  # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0               # unit: s. rolling shutter read out time per frame (from data sheet). 

#visualization parameters
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
visualize_imu_forward: 0        # output imu forward propogation to achieve low latency and high frequence results
visualize_camera_size: 0.4      # size of camera marker in RVIZ
